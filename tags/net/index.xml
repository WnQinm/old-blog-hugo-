<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>net - 标签 - Qinm&#39;s blog</title>
        <link>https://WnQinm.github.io/tags/net/</link>
        <description>net - 标签 - Qinm&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 08 Oct 2022 00:46:09 &#43;0800</lastBuildDate><atom:link href="https://WnQinm.github.io/tags/net/" rel="self" type="application/rss+xml" /><item>
    <title>php(docker)联动nginx(docker)基础配置</title>
    <link>https://WnQinm.github.io/2022/10/php_docker/</link>
    <pubDate>Sat, 08 Oct 2022 00:46:09 &#43;0800</pubDate>
    <author>清梦</author>
    <guid>https://WnQinm.github.io/2022/10/php_docker/</guid>
    <description><![CDATA[主页需要用到php文件，所以研究了一下nginx配置php 我这里使用docker安装php 这里必须要吐槽一下，百度ubuntu安装php，9]]></description>
</item>
<item>
    <title>Nginx(docker)基础配置</title>
    <link>https://WnQinm.github.io/2022/10/nginx_docker/</link>
    <pubDate>Sat, 08 Oct 2022 00:43:07 &#43;0800</pubDate>
    <author>清梦</author>
    <guid>https://WnQinm.github.io/2022/10/nginx_docker/</guid>
    <description><![CDATA[本篇在于利用nginx开启https访问以及设置主页 初始化 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # 拷贝容器内配置文件到本地 $ docker run -d -p 80:80 --name nginx]]></description>
</item>
<item>
    <title>html meta标签简介</title>
    <link>https://WnQinm.github.io/2022/10/meta_html/</link>
    <pubDate>Sat, 08 Oct 2022 00:39:16 &#43;0800</pubDate>
    <author>清梦</author>
    <guid>https://WnQinm.github.io/2022/10/meta_html/</guid>
    <description><![CDATA[meta标签特性 meta标签是单标签，格式如下 &lt;meta 属性=&quot;值&quot;/&gt; meta标签永远位于head元素内部 meta标签分]]></description>
</item>
<item>
    <title>Github page域名解析设置</title>
    <link>https://WnQinm.github.io/2022/09/ghpage/</link>
    <pubDate>Sun, 25 Sep 2022 21:15:46 &#43;0800</pubDate>
    <author>清梦</author>
    <guid>https://WnQinm.github.io/2022/09/ghpage/</guid>
    <description><![CDATA[打开github相应的仓库，我博客仓库结构为master储存页面代码，gh-page分支储存blog的public代码 在本地的master分]]></description>
</item>
<item>
    <title>Kali(docker)</title>
    <link>https://WnQinm.github.io/2022/09/kali_docker/</link>
    <pubDate>Sat, 24 Sep 2022 13:26:40 &#43;0800</pubDate>
    <author>清梦</author>
    <guid>https://WnQinm.github.io/2022/09/kali_docker/</guid>
    <description><![CDATA[配置kali的apt在线安装包源 vim /etc/apt/sources.list 把原先的deb注释掉，然后添加： 1 2 deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib 然后apt update 其次通过下面的代码安装必要的工具]]></description>
</item>
<item>
    <title>ssh基础配置</title>
    <link>https://WnQinm.github.io/2022/09/ssh_help/</link>
    <pubDate>Sat, 24 Sep 2022 13:24:23 &#43;0800</pubDate>
    <author>清梦</author>
    <guid>https://WnQinm.github.io/2022/09/ssh_help/</guid>
    <description><![CDATA[systemctl status sshd查看ssh服务是否启动 systemctl start sshd启动ssh服务 通过ssh 用户名@ip地址登录服务器 首次登录时需要确认密钥，必须输入完整的yes]]></description>
</item>
<item>
    <title>html初识</title>
    <link>https://WnQinm.github.io/2022/09/html_init/</link>
    <pubDate>Sat, 24 Sep 2022 13:15:46 &#43;0800</pubDate>
    <author>清梦</author>
    <guid>https://WnQinm.github.io/2022/09/html_init/</guid>
    <description><![CDATA[网页基本信息 DOCTYPE 告诉浏览器我们要使用什么规范 html 所有内容必须包含在html这个总标签里 head 代表网页头部 body 代表网页主体 title 表示网页标题，显示在标签选项]]></description>
</item>
<item>
    <title>Docker</title>
    <link>https://WnQinm.github.io/2022/09/docker_init/</link>
    <pubDate>Sun, 18 Sep 2022 01:32:42 &#43;0800</pubDate>
    <author>清梦</author>
    <guid>https://WnQinm.github.io/2022/09/docker_init/</guid>
    <description><![CDATA[intro Docker是基于Go语言开发的开源项目 官网：https://www.docker.com/ 文档：https://docs.docker.]]></description>
</item>
<item>
    <title>Clash for linux</title>
    <link>https://WnQinm.github.io/2022/09/clash_linux/</link>
    <pubDate>Fri, 16 Sep 2022 13:27:13 &#43;0800</pubDate>
    <author>清梦</author>
    <guid>https://WnQinm.github.io/2022/09/clash_linux/</guid>
    <description><![CDATA[第一次租云服务器，结果git clone时发现无法正常使用GitHub，无奈学习了在服务器部署clash 安装 首先在本地下载clash本体：ht]]></description>
</item>
</channel>
</rss>
